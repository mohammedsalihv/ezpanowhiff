<!DOCTYPE html>
<html lang="en">
<header class="header-area header-style-1">
  <div id="main-header-higlights" style="background-color:#ffffff; border:1px solid #ffffff; color:black"
    class="header-top header-top-ptb-1 d-none d-lg-block">
    <div class="container">
      <div class="row align-items-center">
        <div class="col-xl-3 col-lg-4">
          <div style="color: #ffffff;" class="header-info">
            <ul>
              <li id="header-li-bg-clr">
                <a style="color: black; font-weight:900;" href="/userHome">Home</a>
              </li>
              <li id="header-li-bg-clr"><a style="color: black; font-weight:900;" href="/userProductlist">Shop </a>
              </li>
              <li id="header-li-bg-clr">
                <a style="color: black; font-weight:900;" href="/userAccount">Account</a>
              </li>
            </ul>
          </div>
        </div>
        <div class="col-xl-6 col-lg-4">
          <div class="text-center">
            <div style="color: black;" id="news-flash" class="d-inline-block">
              <ul>

              </ul>
            </div>
          </div>
        </div>
        <div class="col-xl-3 col-lg-4">
          <div class="header-info header-info-right">
            <ul>

              <div class="header-action-right">
                <div class="header-action-2">
                  <div class="header-action-icon-2">
                    <a href="/wishlistPage">
                      <img class="svgInject" alt="Evara" src="assets/imgs/theme/icons/icon-heart.svg">
                      <span style="background-color: #ffffff; color:rgb(255, 255, 255)" class="pro-count "></span>
                    </a>
                  </div>
                  <div class="header-action-icon-2">
                    <a class="mini-cart-icon" href="/cart">
                      <img alt="Evara" src="assets/imgs/theme/icons/icon-cart.svg">
                      <span style="background-color: #ffffff; color:rgb(255, 255, 255)" class="pro-count #"></span>
                    </a>

                  </div>
                </div>
              </div>
              {{#if this.userLogged}}
              <div class="d-flex justify-content-right ml-4 mt-2">
                <button style="background: transparent; border:none" onclick="logoutConfirmation()" type="button">
                  <i style="color: #000000; font-size:x-large; " class="fa-solid fa-user"></i><i
                    style="color: #000000; font-size:small" class="fa-solid fa-right-from-bracket"></i>
                </button>
              </div>
              {{else}}
              <li>
                <div style="margin-left: 42%;" class="d-flex justify-content-right "></div>
                <i class="fi-rs-user"></i><a style="color: #046963;" href="/login">Log In / Sign Up</a>
          </div>
          </li>
          {{/if}}
          </ul>
        </div>
      </div>
    </div>
  </div>
  </div>
</header>

<body>
  <div style="background-color: #ffffff;" class="page-wrapper">

    <main style="background-color: #ffffff;" class="main">


      <div class="error-content text-center">
        <div class="container p-5 border rounded" style="background-color: #ffffff;">
          <div class="d-flex flex-wrap align-items-center justify-content-between ">
            <div>
              <h4 class="mb-0" style="color: #c96;">order details</h4>
            </div>
            <div>Order status : <span> {{orders.orderStatus}}</span></div>
            <div>Order date : <span> {{orders.OrderedDate}}</span></div>
            <div>Expected status : <span> {{orders.ExpectedArrival}}</span></div>
            <div>OrderId: <span> {{orders.nameRandom}}</span></div>
          </div>
          <div>
            {{#each orderedProducts}}
            <div class="d-flex justify-content-between border border-white p-5 my-3 align-items-center">
              <div><img style="height:80px; width:80px;" src="/images/cropped_{{this.img1}}" alt="product image"></div>
              <div><span>{{this.productName}}</span></div>
              <div><span class="bg badge-info p-1">{{this.statusProduct}}</span></div>
              <div><span>{{this.quantity}}</span></div>
              <div><span><b>â‚¹{{this.salesPrice}}</b></span></div>

              {{#unless ../ordersIndexes}}
              {{#if ../isDelivered}}
              {{#unless (eq this.statusProduct "returned")}}
              {{#unless (eq this.statusProduct "canceled")}}
              <form action="/returnProductOrder" method="POST">
                <input type="hidden" id="order-id" name="orderId" value="{{../orderID}}">
                <input type="hidden" id="product-id" name="productId" value="{{this.productId}}">
                <select style="width: 80%;" id="reason-select" name="returnReason" class="form-select"
                  aria-label="Default select example">
                  <option selected value="Price very high">Price very high</option>
                  <option value="Delivery Time too long">Delivery Time too long</option>
                  <option value="Unsatisfactory Product Information">Unsatisfactory Product Information</option>
                  <option value="Shipping Costs">Shipping Costs</option>
                  <option value="Order Mistakes">Order Mistakes</option>
                  <option value="Change Mind">Change Mind</option>
                  <option value="Other">Other</option>
                </select>
                <button style="margin-left: 25%; width: 80%; color:#fff" id="btn-orderReturn"
                  type="submit">Return</button><br>
              </form>
              {{/unless}}
              {{/unless}}
              {{/if}}
              {{/unless}}
            </div>
            {{/each}}

            <div class="d-flex flex-wrap justify-content-between align-items-end p-2 ">
              <div class="col-4 px-0">
                <div class="">
                  {{orders.address.fullname}}<br>
                  {{orders.address.addressLine}}<br>
                  {{orders.address.City}}<br>
                  {{orders.address.state}}<br>
                  {{orders.address.country}}<br>
                  {{orders.address.pincode}}

                </div>

              </div>
              <div class="col-4 px-0">
                <div class="">

                  {{#if ordersIndexes}}
                  {{#unless isCanceled}}
                  {{#unless isDelivered}}
                  <input type="hidden" id="order-Id" value="{{orders._id}}">
                  <button style="width: 40%; color:#fdfdfd" id="btn-orderReturn" type="button"
                    onclick="cancelOrder()">Cancel order
                  </button>
                  {{/unless}}
                  {{/unless}}
                  {{/if}}
                </div>
              </div>
              <div class="d-flex flex-wrap flex-column align-items-end col-4 px-0">
                <div ><span style=" font-size:small">payment method</span> : <span > {{orders.paymentMethod}}</span>  </div>
                {{#if orders.couponApplied}}
                <div>Discount : <span style="color: green;"> {{orders.couponDetails.discountedAmount}}</span></div>
                {{/if}}
                {{#if orders.deliveryCharge}}
                <div ><span style="font-size:small">Delivery charge : </span><span style="color: red;">50.00</span></div>
                {{/if}}
                <div ><span style="font-size:small">Subtotal : </span><span>{{orders.totalAmount}}</span>
                </div>
                

                <div class="mt-3">
                  <div><b style="font-weight: 900; font-size:large; color:#000">Total : </b><span style="font-weight:900; font-size:large; color:#000">{{orders.totalAmount}}</span></div>

                </div>
                
                <div><button onclick="downloadInvoice(`{{orders._id}}`)" id="btn-invoice" type="button"
                    class="btn btn-primary mt-4 pb-4" data-order-id="<%= order._id %>">Download Invoice</button></div>

              </div>
            </div>

          </div>
        </div>
      </div><!-- End .error-content text-center -->
      <div class="text-center mt-4" style="height: 30vh;">
        {{#if orders.returnRequest}}
        <div style="color: #000; font-weight:300; width:10%;  margin-left:45%;" class="bg bg-warning">Return is requested
        </div>
        <button onclick="cancelRequest('{{orders._id}}')" class="bg badge-danger mt-2"
          style="width: 10%; border: 1px; solid #fff; padding: 4px; border-radius:6px;">Cancel
          request</button>
        {{else}}
        {{#if isDelivered}}
   <form>
  <input type="hidden" id="order-id" name="orderId" value="{{orders._id}}">
  <select style="width: 20%; margin-left:40%" id="reason-select" name="returnReason" class="form-select"
    aria-label="Default select example">
    <option value="" disabled selected>Select a reason</option>
    <option value="Price very high">Price very high</option>
    <option value="Delivery Time too long">Delivery Time too long</option>
    <option value="Unsatisfactory Product Information">Unsatisfactory Product Information</option>
    <option value="Shipping Costs">Shipping Costs</option>
    <option value="Order Mistakes">Order Mistakes</option>
    <option value="Change Mind">Change Mind</option>
    <option value="Other">Other</option>
  </select>
  <button style="color: #fff; width:20%;" id="btn-orderReturn" type="button" onclick="confirmReturn()">Return order</button><br>
</form>

        {{else}}
        {{#unless isCanceled}}
        {{#unless ordersIndexes}}
        <input type="hidden" id="order-Id" value="{{orders._id}}">
        <button style="color: #fff; width:20%;" id="btn-orderReturn" type="button" onclick="cancelOrder()">Cancel
          Order</button><br>
        {{/unless}}
        {{/unless}}
        {{/if}}
        {{/if}}
        {{#if orders.acceptRequest}}
        <p style="font-size: medium; color:green">Return request is approved</p>
        {{/if}}
        {{#if orders.rejectRequest}}
        <p style="font-size: medium; color:rgb(228, 3, 3)">Return request is rejected</p>
        {{/if}}
      </div>
    </main><!-- End .main -->


    <div class="mobile-menu-overlay"></div><!-- End .mobil-menu-overlay -->


    <!-- Sign in / Register Modal -->
    <div class="modal fade" id="signin-modal" tabindex="-1" role="dialog" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
          <div class="modal-body">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true"><i class="icon-close"></i></span>
            </button>


          </div><!-- .End .tab-pane -->
        </div><!-- End .tab-content -->
      </div><!-- End .form-tab -->
    </div><!-- End .form-box -->
  </div><!-- End .modal-body -->
  </div><!-- End .modal-content -->
  </div><!-- End .modal-dialog -->
  </div><!-- End .modal -->

  <!-- Plugins JS File -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  <script src="/user/assets/js/jquery.min.js"></script>
  <script src="/user/assets/js/bootstrap.bundle.min.js"></script>
  <script src="/user/assets/js/jquery.hoverIntent.min.js"></script>
  <script src="/user/assets/js/jquery.waypoints.min.js"></script>
  <script src="/user/assets/js/superfish.min.js"></script>
  <script src="/user/assets/js/owl.carousel.min.js"></script>
  <!-- Main JS File -->
  <script src="/user/assets/js/main.js"></script>


  <!-- Razorpay SDK -->
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

  <!-- custom-js -->
  <script src="/user/custom-js/order-details.js"></script>


</body>

</html>

<script>

  function downloadInvoice(orderId) {

    // Construct the URL with the order ID
    var url = '/generateInvoice/' + orderId;

    // Redirect to the generated URL
    window.location.href = url;
  }

</script>

<script>
  function logoutConfirmation() {
    Swal.fire({
      title: 'Are you sure?',
      text: "You will be logged out!",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, log out!'
    }).then((result) => {
      if (result.isConfirmed) {
        Swal.fire(
          'Logged out!',
          'You have been logged out.',
          'success'
        ).then(() => {
          window.location.href = "/userLogout";
        });
      }
    });
  }
</script>
<script>
 async function confirmReturn() {
    // Get the selected option value
    const selectedOption = document.getElementById('reason-select').value;
    const selectOrderId = document.getElementById('order-id').value;
   
    // Check if any option other than the default is selected
    if (!selectedOption) {
        await Swal.fire({
            title: "Error",
            text: "Please select one reason",
            icon: "error",
            confirmButtonColor: "#3085d6",
            confirmButtonText: "OK"
        });
    } else {
        const confirmation = await Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, Return it!"
        });

        if (confirmation.isConfirmed) {
            const response = await fetch(`/returnOrderRequest/${selectOrderId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ returnReason: selectedOption })
            });


            if (!response.ok) {
                await Swal.fire({
                    title: "Error",
                    text: "Your return request failed.",
                    icon: "error"
                });
            } else {
                const result = await response.json();
                if (result.success) {
                    await Swal.fire({
                        title: "Requested!",
                        text: "Your return request was sent successfully.",
                        icon: "success"
                    });
                    window.location.reload();
                } else {
                    await Swal.fire({
                        title: "Error",
                        text: result.error || 'Failed to request',
                        icon: "error"
                    });
                }
            }
        }
    }
}

</script>


<script>

  async function cancelRequest(orderId) {

    const confirmation = await Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, cancel it!"
    });


    if (confirmation.isConfirmed) {
      const response = await fetch(`/cancelRequest/${orderId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json'
        }
      })

      if (!response.ok) {
        await Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'request cancel failed!',
        });
      } else {

        const result = await response.json()
        if (result.success) {
          await Swal.fire({
            title: "Canceled!",
            text: "Your return request canceled successfully.",
            icon: "success"
          });
          window.location.reload();
        } else {
          await Swal.fire({
            title: "Error",
            text: 'Failed to cancel',
            icon: "error"
          });
        }
      }
    }
  }
</script>

<script>
  function cancelOrder() {
    // Get the order ID
    const orderId = document.getElementById('order-Id').value;
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, Cancel it!"
    }).then((result) => {
      if (result.isConfirmed) {
        fetch('/orderCancel', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ orderId: orderId })
        })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.error,
              });
            } else {
              Swal.fire({
                title: "Canceled!",
                text: "Your order has been canceled.",
                icon: "success"
              }).then(() => {
                // Optionally redirect or update the page
                window.location.reload();
              });
            }
          })
          .catch(error => {
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: 'Item already delivered.',
            });
            console.error('Error:', error);
          });
      }
    });
  }
</script>

<script>
  function productCancel(productId, orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, Cancel it!"
    }).then(() => {

      window.location.href = `/productStatusCancel/${productId}/${orderId}`;


    })

  }
</script>